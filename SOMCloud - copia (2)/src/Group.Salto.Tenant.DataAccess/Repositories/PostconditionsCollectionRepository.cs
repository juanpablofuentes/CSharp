using DataAccess.Common;
using DataAccess.Common.UoW;
using Group.Salto.Common;
using Group.Salto.Entities.Tenant;
using Group.Salto.Infrastructure.Common.Repository.Tenant;
using Microsoft.EntityFrameworkCore;
using System;
using System.Linq;

namespace Group.Salto.DataAccess.Tenant.Repositories
{
    public class PostconditionsCollectionRepository : BaseRepository<PostconditionCollections>, IPostconditionsCollectionRepository
    {
        public PostconditionsCollectionRepository(ITenantUnitOfWork uow) : base(uow)
        {
        }

        public IQueryable<PostconditionCollections> GetAllByTaskId(int id)
        {
            return Filter(x => x.TaskId == id)
                .Include(x => x.Task)
                    .ThenInclude(x => x.TasksTranslations)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.WorkOrderStatus)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.Queue)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.ExternalWorOrderStatus)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.PeopleTechnicians)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.PeopleManipulator)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.ExtraField)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.PeopleResponsibleTechniciansCollection)
                .Include(x => x.Preconditions)
                        .ThenInclude(x => x.LiteralsPreconditions)
                            .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.FinalClient)
                .Include(x => x.Preconditions)
                        .ThenInclude(x => x.LiteralsPreconditions)
                            .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.PeopleResponsibleTechniciansCollection)
                .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.ExternalWorOrderStatus)
                .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderCategory)
                .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderStatus)
                .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.Location)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.Queue)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.Asset)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.Zone)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                            .ThenInclude(x => x.PreconditionsLiteralValues)
                                    .ThenInclude(x => x.PeopleTechnician)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                            .ThenInclude(x => x.PreconditionsLiteralValues)
                                    .ThenInclude(x => x.Project)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN1)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN2)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN3)
               .Include(x => x.Preconditions)
                        .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN4)
               .Include(x => x.Preconditions)
                        .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN5)
               .Include(x => x.Preconditions)
                        .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.PeopleManipulator);
        }

        public PostconditionCollections GetById(int id)
        {
            return Filter(x => x.Id == id)
                .Include(x => x.Task)
                    .ThenInclude(x => x.TasksTranslations)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.WorkOrderStatus)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.Queue)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.ExternalWorOrderStatus)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.PeopleTechnicians)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.PeopleManipulator)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.ExtraField)
                .Include(x => x.Postconditions)
                    .ThenInclude(x => x.PeopleResponsibleTechniciansCollection)
                .Include(x => x.Preconditions)
                        .ThenInclude(x => x.LiteralsPreconditions)
                            .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.FinalClient)
                .Include(x => x.Preconditions)
                        .ThenInclude(x => x.LiteralsPreconditions)
                            .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.PeopleResponsibleTechniciansCollection)
                .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.ExternalWorOrderStatus)
                .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderCategory)
                .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderStatus)
                .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.Location)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.Queue)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.Asset)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.Zone)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                            .ThenInclude(x => x.PreconditionsLiteralValues)
                                    .ThenInclude(x => x.PeopleTechnician)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                            .ThenInclude(x => x.PreconditionsLiteralValues)
                                    .ThenInclude(x => x.Project)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN1)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN2)
               .Include(x => x.Preconditions)
                       .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN3)
               .Include(x => x.Preconditions)
                        .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN4)
               .Include(x => x.Preconditions)
                        .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.WorkOrderTypesN5)
               .Include(x => x.Preconditions)
                        .ThenInclude(lp => lp.LiteralsPreconditions)
                           .ThenInclude(x => x.PreconditionsLiteralValues)
                                .ThenInclude(x => x.PeopleManipulator)
               .FirstOrDefault();
        }

        public SaveResult<PostconditionCollections> CreatePostconditionCollection(PostconditionCollections entity)
        {
            entity.UpdateDate = DateTime.UtcNow;
            Create(entity);
            var result = SaveChange(entity);
            result.Entity = entity;
            return result;
        }

        public SaveResult<PostconditionCollections> DeletePostconditionCollection(PostconditionCollections entity)
        {
            entity.UpdateDate = DateTime.UtcNow;
            Delete(entity);
            var result = SaveChange(entity);
            result.Entity = entity;
            return result;
        }
    }
}