@using Group.Salto.Common.Constants
@using Group.Salto.Common.Constants.Client
@using Group.Salto.SOM.Web.Extensions
@using Group.Salto.SOM.Web.Models.Result
@using Group.Salto.SOM.Web.Models.Client;
@using Group.Salto.Common.Enums
@model ResultViewModel<ClientDetailViewModel>

@{
    var claimUserConfigurationId = ((System.Security.Claims.ClaimsIdentity)User.Identity).GetSpecificClaim(AppIdentityClaims.UserId);
}

<div class="content">
    <div class="row justify-content-center">
        <div class="col-12">
            <form asp-controller="Clients" asp-action="Create" method="post" class="form-horizontal">
                <partial name="_ClientGenericTab" model="Model?.Data" />
                <div class="form-group row">
                    <div class="col-12 text-right">
                        <input type="button" onclick="location.href='@Url.Action("Index", "Clients")'" value="@Html.GetLocalizedText(LocalizationsConstants.CancelText)" class="btn btn-outline-danger" />
                        <input type="submit" class="btn btn-success spinner-loader" id="btnSendMessage" name="sendMessage" value="@Html.GetLocalizedText(LocalizationsConstants.SaveText)" />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@section scripts {
    <script src="~/js/Common/ui.js"></script>
    <script src="~/js/Controls/countryCityPostalCodeSelector.js"></script>
    <script src="~/js/Clients/ClientDetail.js"></script>
    <script src="~/js/Common/authorization.js"></script>
    <script>
        (function($) {
            $(document).ready(function () {
                var countries = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.ClientGeneralDetail?.Countries?.Select(x => new { key = x.Key, value = x.Value })));
                var countryCityPostalCode = new countryCityPostalCodeSelector()
                countryCityPostalCode.Init("#countrySelector",
                {
                    countriesToSelect: countries,
                    countrySelectedProperty: "ClientGeneralDetail.CountrySelected",
                    regionSelectedProperty: "ClientGeneralDetail.RegionSelected",
                    stateSelectedProperty: "ClientGeneralDetail.StateSelected",
                    citySelectedProperty: "ClientGeneralDetail.MunicipalitySelected",
                    postalCodeSelectedProperty: "ClientGeneralDetail.PostalCode",
                    urlRegions: '@Url.Action("GetRegionsByCountry", "Country")',
                    urlStates: '@Url.Action("GetStatesByRegion", "Country")',
                    urlCities: '@Url.Action("GetMunicipalitiesByState", "Country")',
                    urlPostalCode: '@Url.Action("GetByPostalCodes", "Country")',
                    defaultOptionText: '@Html.GetLocalizedText(LocalizationsConstants.DefaultOption)',
                    selectedCountry: '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.ClientGeneralDetail?.CountrySelected ?? 0))',
                    selectedRegion: '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.ClientGeneralDetail?.RegionSelected ?? 0))',
                    selectedState: '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.ClientGeneralDetail?.StateSelected ?? 0))',
                    selectedCity: '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.ClientGeneralDetail?.MunicipalitySelected ?? 0))',
                    selectedPostalCode:'@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.ClientGeneralDetail?.PostalCode ?? 0))',
                    countryText : '@Html.GetLocalizedText(LocalizationsConstants.Country)',
                    regionText : '@Html.GetLocalizedText(LocalizationsConstants.Region)',
                    stateText : '@Html.GetLocalizedText(LocalizationsConstants.State)',
                    cityText: '@Html.GetLocalizedText(LocalizationsConstants.City)',
                    postalCodeText : '@Html.GetLocalizedText(ClientsConstants.ClientPostalCodeFormText)',
                    enablePostalCode : true
                    });

                var saveCreate = @Html.CanDoAction(claimUserConfigurationId, ActionGroupEnum.Clients, ActionEnum.Create).ToString().ToLower();
                app.common.authorization.disable("btnSendMessage", saveCreate);
            });
        })(jQuery);
    </script>
}