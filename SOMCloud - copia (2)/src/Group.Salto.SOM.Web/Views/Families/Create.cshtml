@using Group.Salto.SOM.Web.Models.Families;
@using Group.Salto.SOM.Web.Models.Result;
@using Group.Salto.SOM.Web.Extensions;
@using Group.Salto.Common.Constants;
@using Group.Salto.Common.Constants.Families;
@using Group.Salto.Common.Enums;

@model ResultViewModel<FamiliesDetailsViewModel>

@{
    ViewData["Title"] = @Html.GetLocalizedText(FamiliesConstants.FamiliesCreateTitle);
    Layout = "~/Views/Shared/_Layout.cshtml";
    var claimUserConfigurationId = ((System.Security.Claims.ClaimsIdentity)User.Identity).GetSpecificClaim(AppIdentityClaims.UserId);
}

<div class="row justify-content-center">
    <div class="col-12 col-sm-6">
        <div class="card card-accent-warning">
            <div class="card-header">
                <h2 asp-localized-key="FamiliesCreateTitle"></h2>
            </div>
            <div class="card-body">
                <form asp-controller="Families" asp-action="Create" method="post" class="form-horizontal">
                    <partial name="_FamiliesForm" model="Model?.Data" />
                </form>
            </div>
        </div>
    </div>
</div>
@section Modals {
    <div id="subfamiliesmodal-placeholder"></div>
}
@section scripts{
    <script src="~/js/Controls/ModalFromList.js"></script>
    <script src="~/js/Common/authorization.js"></script>
    <script>
        (function ($) {
            $(document).ready(function () {

                var selectedSubFamilies =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.SubFamiliesList));
                var onCreateOverride = function () {};
                var modalList = new modalFromList(onCreateOverride);
                modalList.Init("#SubFamiliesContainer",
                {
                    selectedItems: selectedSubFamilies,
                    collectionPropertyId: "@nameof(FamiliesDetailsViewModel.SubFamiliesList)",
                    collectionPropertyName: "@nameof(FamiliesDetailsViewModel.SubFamiliesList)",
                    linkText: "@Html.GetLocalizedText(@LocalizationsConstants.CreateButtonText)",
                    modalName: 'SubFamiliesModal',
                    id: '@nameof(SubFamiliesViewModel.SubFamiliesId)',
                    columnsText: '#,@Html.GetLocalizedText(LocalizationsConstants.Name),@Html.GetLocalizedText(LocalizationsConstants.Description)',
                    columnsValues: '@nameof(SubFamiliesViewModel.SubFamiliesName),@nameof(SubFamiliesViewModel.SubFamiliesDescription)',
                    columnsModal: '@nameof(SubFamiliesViewModel.SubFamiliesId),@nameof(SubFamiliesViewModel.SubFamiliesName),@nameof(SubFamiliesViewModel.SubFamiliesDescription)',
                    dataUrl: '@Url.Action("SubFamilies", "Families")',
                    placeholderElement: 'subfamiliesmodal-placeholder',
                    saveButton: 'SubFamiliesConfirmSave',
                    initialIdValue: 1
                    });

                var saveCreate = @Html.CanDoAction(claimUserConfigurationId, ActionGroupEnum.AssetFamilies, ActionEnum.Create).ToString().ToLower();
                app.common.authorization.disable("btnSaveFamilies", saveCreate);
            });
        })(jQuery);
    </script>
}