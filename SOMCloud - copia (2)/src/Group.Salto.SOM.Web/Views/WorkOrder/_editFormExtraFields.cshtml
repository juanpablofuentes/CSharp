@using Group.Salto.SOM.Web.Models.WorkOrder
@using Group.Salto.ServiceLibrary.Common.Mobility.Dto.Service
@using Group.Salto.Common.Constants
@using Group.Salto.SOM.Web.Extensions
@using Group.Salto.Common.Constants.WorkOrder

@model IList<WorkOrderFormEditViewModel>

<form id="uploadForm" asp-controller="WorkOrder" asp-action="EditForm" method="post" enctype="multipart/form-data" class="form-horizontal">
    @for (int i = 0; i < Model.Count; i++)
    {
        <input hidden id="Id" asp-for="@Model[i].Id" type="text" />
        <input hidden id="ExtraFieldName" asp-for="@Model[i].ExtraFieldName" type="text" />
        <input hidden id="ExtraFieldType" asp-for="@Model[i].ExtraFieldType" type="text" />
        <div class="row">
            <div class="col">
                @Model[i].ExtraFieldName
            </div>
            <div class="col som-signature">
                @if (Model[i].IsTextInput())
                {
                    <input asp-for="@Model[i].ExtraFieldValue" type="text" class="form-control" />
                }
                else if (Model[i].IsNumberInput())
                {
                    <input asp-for="@Model[i].ExtraFieldValue" type="number" class="form-control" min="0" />
                }
                else if (Model[i].IsDecimalInput())
                {
                    <input asp-for="@Model[i].ExtraFieldValue" type="number" class="form-control" min="0" />
                }
                else if (Model[i].IsBoolean())
                {
                    <label class="switch switch-label switch-pill switch-primary">
                        <input asp-for="@Model[i].ExtraFieldBoolValue" value="@Model.@Model[i].ExtraFieldBoolValue.ToString().ToLower()" type="checkbox" class="switch-input" onchange="app.common.ui.ChangeCheckbox(this)">
                        <span class="switch-slider" data-checked="@Html.GetLocalizedText(LocalizationsConstants.Yes)" data-unchecked="@Html.GetLocalizedText(LocalizationsConstants.No)"></span>
                    </label>
                }
                else if (Model[i].IsSelect())
                {
                    <select asp-for="@Model[i].ExtraFieldValue" asp-items="@Model[i].GetElementsForSelect()" class="form-control"><option value="0">-</option></select>

                }
                else if (Model[i].IsSignature())
                {
                    string imageSource = Model[i].GetSignature();
                    <input asp-for="@Model[i].SignatureImage" type="file" accept="image/png">
                }
                else if (Model[i].IsDate())
                {
                    <input asp-for="@Model[i].ExtraFieldValue" type="text" class="form-control fdates">
                }
                else if (Model[i].IsFile)
                {
                    <input hidden asp-for="@Model[i].ExtraFieldValue" type="text" />
                    <input asp-for="@Model[i].UploadFiles" type="file" multiple>
                    if(Model[i].Files != null) { 
                        @for(int f = 0; f < Model[i].Files.Count(); f++) {
                        <ul class="list-group">
                            <li class="list-group-item">
                                <a>@Model[i].Files[f].FileName<span asp-localized-key="@WorkOrderConstants.WorkOrderEditFormExtraFieldsDeleteFile"></span><input type="checkbox" asp-for="@Model[i].Files[f].CheckedForDelete"></a>
                                <input type="hidden" asp-for="@Model[i].Files[f].FileName" />
                            </li>
                        </ul>
                        }
                    }
                }
            </div>
        </div>
    }
    <input id="ef" type="button" class="btn btn-success" value="@Html.GetLocalizedText(LocalizationsConstants.SaveText)" onclick="app.WorkOrderDetail.PostPopUp(@Model[0].ServiceId)" />
    <input id="efCancel" type="button" class="btn btn-outline-danger" data-dismiss="modal" value="@Html.GetLocalizedText(LocalizationsConstants.CancelText)" />
</form>