@using Group.Salto.Common.Constants
@using Group.Salto.Common.Constants.Calendar
@using Group.Salto.Controls.Table
@using Group.Salto.ServiceLibrary.Helpers
@using Group.Salto.SOM.Web.Extensions
@using  Group.Salto.SOM.Web.Models.Result;
@using Group.Salto.SOM.Web.Models.Calendar;
@model ResultViewModel<CalendarsViewModel>

@{
    var title = @Html.GetLocalizedText(CalendarsConstants.CalendarIndexTitlePage);
    ViewData["Title"] = title;
}

<h1 class="page-title">@title</h1>

@{
    var table = Html.GetMultiSelectTableFor(Model.Data.Calendars, au => au.Id, Model.Data.Filters, TranslationHelper.GetTranslationService());
    table.SetColumns(m => m.Name, m => m.Description);
    table.SetSortingColumns(m => m.Name, m => m.Name, m => m.Description);
    table.ShowSelectColumn = false;
    table.TableCssClass = "table table-striped table-hover";
    table.TableHeaderCssClass = "thead-som";
    table.AddColumnTemplateFor(m => m.Color,
    @<div class="col-calendar-color text-right">
        <span class="calendar-color" style="background-color: @item.RawValue;"></span>
    </div>, "");

table.AddColumnTemplateFor(m => m.Id,
@<div class="col-update text-right">
    <a asp-action="Index" asp-controller="Scheduler" asp-route-id="@item.RawValue" id="@item.RawValue">
        <i class="fa fa-calendar fa-lg"></i>
    </a>
    <a asp-action="Edit" asp-route-id="@item.RawValue" id="@item.RawValue">
        <i class="fa fa-pencil fa-lg"></i>
    </a>
    <a asp-action="Delete" asp-route-id="@item.RawValue" id="@item.RawValue" class="deleteButton"
       data-toggle="tooltip" data-placement="top">
        <i class="fa fa-trash-o fa-lg"></i>
    </a>
</div>, "");
}

<div class="content">
    <div class="row">
        <div class="col-12">
            <partial name="_CalendarsFilter" model="@Model.Data.Filters" />
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            @if (Model.Data.Calendars.Any())
            {
                <div class="table-responsive">
                    @table.Render("CalendarsGrid")
                </div>
                <partial name="_Pager" for="@Model.Data.Filters" />
            }
            else
            {
                <partial name="_NoRecords" />
            }
        </div>
    </div>
</div>
<popup Text="@Html.GetLocalizedText(CalendarsConstants.CalendarDeleteMessage)"
       Id="confirmationModal"
       submit-button-text="@Html.GetLocalizedText(LocalizationsConstants.Confirm)"
       cancel-button-text="@Html.GetLocalizedText(LocalizationsConstants.Close)"></popup>

<popup Text="@Html.GetLocalizedText(CalendarsConstants.CalendarDeleteWithPeopleMessage)"
       Id="confirmationWitPeopleModal"
       submit-button-text="@Html.GetLocalizedText(LocalizationsConstants.Confirm)"
       cancel-button-text="@Html.GetLocalizedText(LocalizationsConstants.Close)"></popup>

@section scripts {
    <script src="~/js/Common/constants.js"></script>
    <script src="~/js/Calendar/calendarConstants.js"></script>
    <script src="~/js/Calendar/calendarMain.js"></script>

    <script>
        (function ($) {
            $(document).ready(function () {
                var values = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Data.Calendars.Items.Select(x=>new {id = x.Id, hasPeopleAssigned = x.HasPeopleAssigned })));
                app.calendar.main.Init();
                MultiTableScript(app.calendar.constants.CalendarGrid);
                var page = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Data.Filters));
                pager.PagerSelector.Init({ PageData: page });

                $(app.calendar.constants.CalendarDeleteButtonId).on('click', function (evt) {
                        evt.preventDefault();
                        var id = $(this).attr('id');
                        var item = values.find(o => o.id == id);
                        deleteElement(item, app.calendar.constants.ConfirmationModalId, app.calendar.constants.ConfirmationModalConfirmSave);
                    });

                function deleteElement(item, modalId, saveButtonId)
                {
                    if (item !== undefined && item !== null) {
                        if (item.hasPeopleAssigned) {
                            $(app.calendar.constants.ConfirmationWitPeopleModalId).modal("toggle");
                            $(app.calendar.constants.ConfirmationWitPeopleModalConfirmSave).on("click", function () {
                                deleteConfirmElement(item.id, app.calendar.constants.ConfirmationWitPeopleModalId);
                                $(app.calendar.constants.ConfirmationWitPeopleModalConfirmSave).off("click");
                            });
                        }
                        else {
                            $(modalId).modal('toggle');
                            $(app.calendar.constants.ConfirmationModalConfirmSave).on('click', function () {
                                deleteConfirmElement(item.id, modalId);
                                $(app.calendar.constants.ConfirmationModalConfirmSave).off("click");
                            });
                        }
                    }
                }

                function deleteConfirmElement(data, modalId) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Calendar")',
                        type: app.constants.Delete,
                        dataType: 'json',
                        cache: false,
                        data: { id: data },
                        success: function () {
                            $(app.calendar.constants.CalendarButtonApplyFilter).trigger("click");
                        },
                        error: function() {
                            $(app.calendar.constants.CalendarButtonApplyFilter).trigger("click");
                        },
                    });
                    $(modalId).modal('toggle');
                };
                $(app.calendar.constants.ConfirmationModalConfirmCancel).on('click', function () {
                    $(app.calendar.constants.ConfirmationModalId).modal('toggle');
                    $(app.calendar.constants.ConfirmationModalConfirmSave).off('click');
                });

                $(app.calendar.constants.ConfirmationWitPeopleModalConfirmCancel).on('click', function () {
                    $(app.calendar.constants.ConfirmationWitPeopleModalId).modal('toggle');
                    $(app.calendar.constants.ConfirmationWitPeopleModalConfirmSave).off('click');
                });
            });
        })(jQuery);
    </script>
}