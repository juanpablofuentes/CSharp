@using Group.Salto.ServiceLibrary.Helpers
@using Group.Salto.SOM.Web.Extensions
@using Group.Salto.SOM.Web.Models.WarehouseMovements
@using Group.Salto.SOM.Web.Models.Result
@using Group.Salto.Controls.Table
@using System;
@using Group.Salto.Common.Constants.WarehouseMovements
@using Group.Salto.Common.Constants
@model ResultViewModel<WarehouseMovementsViewModel>

@{
    var title = WarehouseMovementsConstants.WarehousesMovementsTitle;
    ViewData["Title"] = title;
}

<h1 class="page-title">@title</h1>
@if (Model.Data.Movements != null)
{
    var table = Html.GetMultiSelectTableFor(Model.Data.Movements, au => au.Id, Model.Data.Filters, TranslationHelper.GetTranslationService());
    table.SetColumns(m => m.RegistryDate, m => m.ItemName, m => m.MovementFromName, m => m.MovementFromType, m => m.TypeName,
                    m => m.WorkOrderId, m => m.ServiceId, m => m.SerialNumber, m => m.Quantity, m => m.MovementToName, m => m.MovementToType);
    table.SetSortingColumns(m => m.RegistryDate, m => m.WorkOrderId, m => m.MovementFromName, m => m.MovementToName);
    table.ShowSelectColumn = false;
    table.TableCssClass = "table table-striped table-hover";
    table.TableHeaderCssClass = "thead-som";

    <div class="content">
        <div class="row">
            <div class="col-12">
                <partial name="_WarehouseMovementsFilter" model="@Model.Data.Filters" />
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                @if (Model.Data.Movements.Any())
                {
                    <div class="table-responsive workstation-table" id="multigridContainerId">
                        @table.Render("WarehouseMovementsGrid")
                    </div>
                    <partial name="_Pager" for="@Model.Data.Filters" />
                }
                else
                {
                    <partial name="_NoRecords" />
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="content">
        <div class="row">
            <div class="col-12">
                <partial name="_WarehouseMovementsFilter" model="@Model.Data.Filters" />
            </div>
        </div>
    </div>        
}


@section Styles{
    <link href="~/lib/dhtmlx/suite/codebase/dhtmlx.css" rel="stylesheet" />
}

@section scripts {
    <script src="~/js/WarehouseMovements/WarehouseMovementsList.js"></script>
    <script src="~/js/Common/config.js"></script>
    <script src="~/js/Common/ui.js"></script>
    <script src="~/js/Common/constants.js"></script>
    <script src="~/js/Common/validations.js"></script>
    <script src="~/js/AutoCompleteListSelector.js"></script>
    <script src="~/js/AutocompleteControl.js"></script>

    <script>
        (function ($) {
            $(document).ready(function () {
                var itemsSelected = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.Filters.Items));
                function getItemsFilter(text) {
                    var data = {
                        QueryType: app.constants.AutoComplete,
                        QueryTypeParameters: {
                            Text: text
                        }
                    }
                    return data;
                };

                var Items = {
                    selectedItems: itemsSelected,
                    column1Text: '#',
                    column2Text: '@Html.GetLocalizedText(LocalizationsConstants.Name)',
                    getDataMethod: getItemsFilter
                };

                app.warehouseMovements.Init(Items);
                app.warehouseMovements.CalendarLoad();
                MultiTableScript("WarehouseMovementsGrid");
                var page = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Data.Filters));
                pager.PagerSelector.Init({ PageData: page });
            });
        })(jQuery);
    </script>
}