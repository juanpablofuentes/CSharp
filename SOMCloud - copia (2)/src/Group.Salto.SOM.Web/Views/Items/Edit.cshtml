@using Group.Salto.Common.Constants
@using Group.Salto.Common.Constants.Items
@using Group.Salto.SOM.Web.Models.Items
@using Group.Salto.SOM.Web.Extensions
@using Group.Salto.SOM.Web.Models.Result
@using Group.Salto.Common.Enums
@model ResultViewModel<ItemsDetailViewModel>
@{
    var title = @Html.GetLocalizedText(ItemsConstants.ItemsEditPageTitle);
    ViewData["Title"] = title;
    var claimUserConfigurationId = ((System.Security.Claims.ClaimsIdentity)User.Identity).GetSpecificClaim(AppIdentityClaims.UserId);
}
<h2>@title&nbsp;<span class="small text-muted">#@Model.Data?.GeneralViewModel?.Id</span></h2>

<div class="content">
    <div class="row justify-content-center">
        <div class="col-12">
            <form asp-controller="Items" asp-action="Edit" method="post" class="form-horizontal" enctype="multipart/form-data">
                <partial name="_ItemsDetail" model="Model?.Data" />
                <div class="form-group row">
                    <div class="col-12 text-right">
                        <input type="button" onclick="location.href='@Url.Action("Index", "Items")'" value="@Html.GetLocalizedText(LocalizationsConstants.CancelText)" class="btn btn-outline-danger" />
                        <input type="submit" class="btn btn-success spinner-loader" id="btnSendMessage" name="sendMessage" value="@Html.GetLocalizedText(LocalizationsConstants.SaveText)" />
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Modals {
    <div id="itemsSerialNumbersmodal-placeholder"></div>
    <partial name="_ModalWithImage" />
}

@section Styles{
    <link href="~/lib/dhtmlx/suite/codebase/dhtmlx.css" rel="stylesheet" />
}

@section Scripts{
    <script src="~/js/AutocompleteControl.js"></script>
    <script src="~/js/Common/config.js"></script>
    <script src="~/js/Common/constants.js"></script>
    <script src="~/js/Common/validations.js"></script>
    <script src="~/js/Common/ui.js"></script>
    <script src="~/js/Items/ItemDetails.js"></script>
    <script src="~/js/Controls/ModalFromList.js"></script>
    <script src="~/js/Common/authorization.js"></script>
    <script>
        var selectedItemsSerialNumbers = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.TrackingViewModel?.SerialNumbers));
        var familiesSelected = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.GeneralViewModel.Family));
        var subfamiliesSelected = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.GeneralViewModel.SubFamily));
        (function ($) {
            $(document).ready(function () {

                function getFamilyFilter(text) {
                    var data = {
                        QueryType: app.constants.AutoComplete,
                        QueryTypeParameters: {
                            Text: text
                        }
                    }
                    return data;
                };

                var Families = {
                    hasdefaultItem: familiesSelected == undefined,
                    value: (familiesSelected == undefined) ? null : familiesSelected.Text,
                    key: (familiesSelected == undefined) ? null : familiesSelected.Value,
                    itemIdProperty: 'GeneralViewModel.Family.Value',
                    itemTextProperty: 'GeneralViewModel.Family.Text',
                    getDataMethod: getFamilyFilter
                };

                var SubFamilies = {
                    hasdefaultItem: subfamiliesSelected == undefined,
                    value: (subfamiliesSelected == undefined) ? null : subfamiliesSelected.Text,
                    key: (subfamiliesSelected == undefined) ? null : subfamiliesSelected.Value,
                    selectedItems: subfamiliesSelected,
                    itemIdProperty: 'GeneralViewModel.SubFamily.Value',
                    itemTextProperty: 'GeneralViewModel.SubFamily.Text',
                    getDataMethod: getFamilyFilter
                };

                var Mode = true;

                var options = {
                    Families,
                    SubFamilies,
                    Mode
                }

                app.items.detail.Init(options);

                if ('@Model?.Data?.GeneralViewModel?.TrackSerialNumber' === 'True') {
                    var onCreateOverride = function () {};
                    var modalList = new modalFromList(onCreateOverride);
                    modalList.Init("#ItemsSerialNumbersContainer",
                    {
                        selectedItems: selectedItemsSerialNumbers,
                        collectionPropertyId: "@nameof(ItemsDetailViewModel.TrackingViewModel)_@nameof(ItemsDetailViewModel.TrackingViewModel.SerialNumbers)",
                        collectionPropertyName: "@nameof(ItemsDetailViewModel.TrackingViewModel).@nameof(ItemsDetailViewModel.TrackingViewModel.SerialNumbers)",
                        linkText: "@Html.GetLocalizedText(@LocalizationsConstants.Add)",
                        modalName: 'ItemsSerialNumbersModal',
                        id: '@nameof(SerialNumbersViewModel.SerialNumberId)',
                        columnsText : '#,@Html.GetLocalizedText(ItemsConstants.ItemsDetailsSerialNumber)',
                        columnsValues: '@nameof(SerialNumbersViewModel.SerialNumberSerialNumber)',
                        columnsModal: '@nameof(SerialNumbersViewModel.SerialNumberId),@nameof(SerialNumbersViewModel.SerialNumberSerialNumber),@nameof(SerialNumbersViewModel.SerialNumberStatusId),@nameof(SerialNumbersViewModel.SerialNumberObservations)',
                        dataUrl: '@Url.Action("ItemsSerialNumbers", "ItemsSerialNumbers")',
                        placeholderElement: 'itemsSerialNumbersmodal-placeholder',
                        saveButton: 'ItemsSerialNumbersConfirmSave',
                        initialIdValue: 1
                    });
                }

                var saveEdit = @Html.CanDoAction(claimUserConfigurationId, ActionGroupEnum.Items, ActionEnum.Update).ToString().ToLower();
		        app.common.authorization.disable("btnSendMessage", saveEdit);

            });
        })(jQuery);
    </script>
}