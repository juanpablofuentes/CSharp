@using Group.Salto.Common.Constants.Paging
@using Group.Salto.Controls.Table.Filter;
@using Group.Salto.Common.Constants
@using Group.Salto.SOM.Web.Extensions

@model IPagedFilter;

@{
    var initialPage = Model.Page - (PagingConstants.NumberOfPages / 2) + (Model.Page + (PagingConstants.NumberOfPages / 2) > Model.PagesCount ? Model.PagesCount - (Model.Page + (PagingConstants.NumberOfPages / 2)) : 0);
    var lastPage = Model.Page + (PagingConstants.NumberOfPages / 2) - (Model.Page - (PagingConstants.NumberOfPages / 2) < 1 ? Model.Page - (PagingConstants.NumberOfPages / 2) - 1 : 0);
    var indexPage = Model.Page;
}

<div id="pager" class="form-group row">
    @if (Model != null)
    {
        <div class="col-sm-6">
            <p>
                <span id="indexPageShowed">@indexPage</span>&nbsp;
                <span>@Html.GetLocalizedText(LocalizationsConstants.PaginationOf)</span>&nbsp;<span id="totalPage Showed">@Model.PagesCount</span>&nbsp;
                <span>@Html.GetLocalizedText(LocalizationsConstants.PaginationPage)</span>,
                <span style="font-weight: bold">@Model.TotalValues</span>&nbsp<span>@Html.GetLocalizedText(LocalizationsConstants.TotalValues)</span>
            </p>
        </div>
        <div class="col-sm-6">
            <nav>
                <ul class="pagination pull-right">

                    @if (Model.Page > 1)
                    {
                        if (PagingConstants.NumberOfPages < Model.PagesCount)
                        {
                            <li class="page-item btn-ligh">
                                <a class="page-link" id="pager-first" data-page="1" data-toggle="tooltip" data-placement="top" title="@Html.GetLocalizedText(LocalizationsConstants.PaginationFirstPage)">
                                    <i class="material-icons">
                                        first_page
                                    </i>
                                </a>
                            </li>

                        }
                        <li class="page-item">
                            <a class="page-link" id="pager-prev">
                                <span class="fa fa-chevron-left" aria-hidden="true"></span>
                            </a>
                        </li>
                    }

                    @{
                        for (var pageIndex = Math.Max(initialPage, PagingConstants.InitialPage); pageIndex <= Math.Min(Model.PagesCount, lastPage); pageIndex++)
                        {
                            if (pageIndex == Model.Page)
                            {
                                <li class="page-item active">
                                    <a href="#" class="page-link" data-page="@pageIndex">@pageIndex</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a href="#" class="page-link" data-page="@pageIndex">@pageIndex</a>
                                </li>
                            }
                        }
                        if (Model.Page < Model.PagesCount)
                        {
                            <li class="page-item">
                                <a class="page-link" id="pager-next">
                                    <span class="fa fa-chevron-right" aria-hidden="true"></span>
                                </a>
                            </li>
                            if (PagingConstants.NumberOfPages < Model.PagesCount)
                            {
                                <li class="page-item btn-ligh">
                                    <a class="page-link" id="pager-last" data-page="@Model.PagesCount" data-toggle="tooltip" data-placement="top" title="@Html.GetLocalizedText(LocalizationsConstants.PaginationLastPage)">
                                        <i class="material-icons">
                                            last_page
                                        </i>
                                    </a>
                                </li>

                            }
                        }
                    }
                </ul>
            </nav>
        </div>
    }
</div>
