@using Group.Salto.Common.Constants
@using Group.Salto.Common.Constants.FinalClients
@using Group.Salto.Common.Constants.CalendarEvent
@using Group.Salto.ServiceLibrary.Common.Contracts.CalendarEvent
@using Group.Salto.SOM.Web.Extensions
@using Group.Salto.SOM.Web.Models.FinalClients
@using Group.Salto.SOM.Web.Models.Result
@using Group.Salto.SOM.Web.Models
@using Group.Salto.SOM.Web.Models.Contracts
@using Group.Salto.Common.Constants.Contracts
@using Group.Salto.Common.Enums

@model ResultViewModel<FinalClientsEditViewModel>

@{
    var title = @Html.GetLocalizedText(FinalClientsConstants.FinalClientsEditPageTitle);
    ViewData["Title"] = title;
    var cultureInfo = Html.GetLanguageCookie().ToLower();
    var GlobalScriptLang = "/lib/dhtmlx/scheduler/codebase/sources/locale/locale_" + cultureInfo + ".js";
    var RecurringScriptLang = "/lib/dhtmlx/scheduler/codebase/sources/locale/recurring/locale_recurring_" + cultureInfo + ".js";
    var claimUserConfigurationId = ((System.Security.Claims.ClaimsIdentity)User.Identity).GetSpecificClaim(AppIdentityClaims.UserId);
}

<div class="content">
    <div class="row justify-content-center">
        <div class="col-12 col-sm-9">
            <div class="card card-accent-warning">
                <div class="card-header">
                    <h2>@ViewBag.Title <small class="text-muted">#@Model.Data.FinalClientsDetailViewModel.Id</small></h2>
                </div>
                <div class="card-body">
                    <form asp-controller="FinalClients" asp-action="Edit" method="post" class="form-horizontal">
                        <partial name="_FinalClientsGenericTab" model="Model?.Data" />
                        <div class="form-group row">
                            <div class="col-12 text-right">
                                <input type="button" onclick="location.href='@Url.Action("Index", "FinalClients")'" value="@Html.GetLocalizedText(LocalizationsConstants.CancelText)" class="btn btn-outline-danger" />
                                <input type="submit" class="btn btn-success spinner-loader" id="btnSendMessage" name="sendMessage" value="@Html.GetLocalizedText(LocalizationsConstants.SaveText)" />
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section sideBarMenu {
    <partial name="_CalendarsAvailable" />
}

@section Modals {
    <partial name="_CalendarModal" />
    <div id="contactmodal-placeholder"></div>
}

@section Styles{
    <link href="~/lib/dhtmlx/suite/codebase/dhtmlx.css" rel="stylesheet" />
    <link href="~/lib/dhtmlx/scheduler/codebase/dhtmlxscheduler_material.css" rel="stylesheet" />
    <link href="~/lib/dhtmlx/scheduler/codebase/dhtmlxscheduler_material__custom.css" rel="stylesheet" />
}

@section scripts {
    <script src="~/js/Common/constants.js"></script>
    <script src="~/js/Common/config.js"></script>
    <script src="~/js/Common/ui.js"></script>
    <script src="~/js/Common/contrastColor.js"></script>
    <script src="~/js/Bundle/bundle--colorPicker.js"></script>
    <script src="~/js/Bundle/bundle--scheduler.js"></script>
    <script src="~/js/Scheduler/calendar.js"></script>
    <script src="~/js/Scheduler/Scheduler.js"></script>
    <script src="~/js/Calendar/calendarConstants.js"></script>
    <script src="@GlobalScriptLang"></script>
    <script src="@RecurringScriptLang"></script>
    <script src="~/js/FinalClients/FinalClientsCategoriesConstants.js"></script>
    <script src="~/js/FinalClients/FinalClientsCategoriesDetails.js"></script>
    <script src="~/js/Common/uiConstants.js"></script>
    <script src="~/js/Controls/ModalFromList.js"></script>
    <script src="~/js/Contacts/ContactsDetails.js"></script>
    <script src="~/js/Common/authorization.js"></script>

    <script language="javascript">

        function loadScheduler() {
            var optionsSheduler = {
                id: '@Model.Data.FinalClientsDetailViewModel.Id',
                url: app.config.Urls.finalClientsCalendar,
                eventUrl: app.config.Urls.saveCalendarEvents,
                avariableCalendarUrl: app.config.Urls.getFinalClientsAvailableCalendars,
                addCalendarUrl: app.config.Urls.addFinalClientsCalendar,
                initCalendar: true,
                eventCategory: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.SchedulerViewModel?.CalendarEventCategory)),
                btnSelect: '@Html.GetLocalizedText(LocalizationsConstants.Select)',
                btnCancel: '@Html.GetLocalizedText(LocalizationsConstants.CancelText)',
                SequenceNoMove: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventSequenceNoMove)',
                NameEmpty: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventNameEmpty)',
                CostHourEmpty: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventCostHourEmpty)',
                CostHourNotNumber: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventCostHourNotNumber)',
                CalendarEmpty :  '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventCalendarIdEmpty)',
                startDateEmpty: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventStartDateEmpty)',
                endDateEmpty: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventEndDateEmpty)',
                endDateGreaterThanStartDate: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventEndDateGreaterThanStartDate)'
            };
            app.Scheduler.Init(optionsSheduler);

            var options = {
                btnSelect: '@Html.GetLocalizedText(LocalizationsConstants.Select)',
                btnCancel: '@Html.GetLocalizedText(LocalizationsConstants.CancelText)',
                color: app.calendar.constants.CalendarColorPickerInitialColor,
                skin: app.calendar.constants.ColorPickerSkin,
                parent: app.calendar.constants.CalendarColorPickerParent,
                input: app.calendar.constants.CalendarColorPickerInput
            }
            app.colorPicker.Init(options)
        }
        (function ($)
        {
            $(document).ready(function ()
            {
                var selectedContacts =  @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.FinalClientsDetailViewModel?.Contacts));
                var onCreateOverride = function () {};
                var modalList = new modalFromList(onCreateOverride);
                modalList.Init("#ContactContainer",
                {
                    selectedItems: selectedContacts,
                    collectionPropertyId: "@nameof(FinalClientsEditViewModel.FinalClientsDetailViewModel)_@nameof(FinalClientsEditViewModel.FinalClientsDetailViewModel.Contacts)",
                    collectionPropertyName:"@nameof(FinalClientsEditViewModel.FinalClientsDetailViewModel).@nameof(FinalClientsEditViewModel.FinalClientsDetailViewModel.Contacts)",
                    linkText: "@Html.GetLocalizedText(@LocalizationsConstants.CreateButtonText)",
                    modalName: '@ContractsConstants.ContactModalName',
                    id: '@nameof(ContactsEditViewModel.ContactsId)',
                    columnsText : '#,@Html.GetLocalizedText(LocalizationsConstants.Name)',
                    columnsModal: '@nameof(ContactsEditViewModel.ContactsId),@nameof(ContactsEditViewModel.Name),@nameof(ContactsEditViewModel.FirstSurname),@nameof(ContactsEditViewModel.SecondSurname),@nameof(ContactsEditViewModel.Email),@nameof(ContactsEditViewModel.Telephone),@nameof(ContactsEditViewModel.Position),@nameof(ContactsEditViewModel.FullName)',
                    columnsValues: '@nameof(ContactsEditViewModel.FullName)',
                    dataUrl: '@Url.Action("Contact", "Contacts")',
                    placeholderElement: 'contactmodal-placeholder',
                    saveButton: '@ContractsConstants.ContactConfirmSave',
                    initialIdValue: 1
                    });
                var saveEdit = @Html.CanDoAction(claimUserConfigurationId, ActionGroupEnum.ClientSites, ActionEnum.Update).ToString().ToLower();
		        app.common.authorization.disable("btnSendMessage", saveEdit);
            });
        })(jQuery);
    </script>
}