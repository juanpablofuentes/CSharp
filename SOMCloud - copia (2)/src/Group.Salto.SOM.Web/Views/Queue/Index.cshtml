@using Group.Salto.Common.Constants
@using Group.Salto.Common.Constants.Queue
@using Group.Salto.SOM.Web.Models.Result
@using Group.Salto.SOM.Web.Models.Queue
@using Group.Salto.SOM.Web.Extensions
@using Group.Salto.Controls.Table
@using Group.Salto.ServiceLibrary.Helpers

@model ResultViewModel<QueuesListViewModel>

@{
    ViewData["Title"] = @Html.GetLocalizedText("QueueIndexTitle");
    var title = @Html.GetLocalizedText("QueueIndexTitle");
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1 class="page-title">@title</h1>

@{
    var table = Html.GetMultiSelectTableFor(Model.Data.QueueList, au => au.Id, Model.Data.QueueFilter, TranslationHelper.GetTranslationService());
    table.SetColumns(m => m.Name, m => m.Description);
    table.SetSortingColumns(m => m.Name, m => m.Name, m => m.Description);
    table.ShowSelectColumn = false;
    table.TableCssClass = "table table-striped table-hover";
    table.TableHeaderCssClass = "thead-som";

    table.AddColumnTemplateFor(m => m.Id,
    @<div class="col-update text-right">
        <a asp-action="Edit" asp-route-id="@item.RawValue" id="@item.RawValue">
            <i class="fa fa-pencil fa-lg"></i>
        </a>
        <a asp-action="Delete" asp-route-id="@item.RawValue" id="@item.RawValue" class="deleteButton"
           data-toggle="tooltip" data-placement="top">
            <i class="fa fa-trash-o fa-lg"></i>
        </a>
    </div>, "");
}

<div class="content">
    <div class="row">
        <div class="col-12">
            <partial name="_QueueFilter" model="@Model.Data.QueueFilter" />
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            @if (Model.Data.QueueList.Any())
            {
                <div class="table-responsive workstation-table" id="multigridContainerId">
                    @table.Render("QueueGrid")
                </div>

                <partial name="_Pager" for="@Model.Data.QueueFilter" />
            }
            else
            {
                <partial name="_NoRecords" />
            }
        </div>
    </div>
</div>

<popup Text="@Html.GetLocalizedText(QueueConstants.QueueDeleteMessage)" Id="confirmationModal"
       submit-button-text="@Html.GetLocalizedText(LocalizationsConstants.Confirm)"
       cancel-button-text="@Html.GetLocalizedText(LocalizationsConstants.Close)"></popup>
<popup Text="@Html.GetLocalizedText(QueueConstants.QueueDeleteWithWorkOrderMessage)"
       Id="confirmationModalWithWorkOrders"
       show-cancel-button="false"
       submit-button-text="@Html.GetLocalizedText(LocalizationsConstants.Confirm)"></popup>

@section scripts {
    <script src="~/js/Queue/queue.js"></script>
    <script src="~/js/Common/config.js"></script>
    <script>
        (function ($) {
            $(document).ready(function () {
                app.queue.main.Init();
                MultiTableScript("QueueGrid");
                var page = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Data.QueueFilter));
                pager.PagerSelector.Init({ PageData: page });
                $(".deleteButton").on("click",
                    function (evt) {
                        evt.preventDefault();
                        var id = $(this).attr('id');
                        $.ajax({
                            url: app.config.Urls.queueCanDelete,
                            type: 'GET',
                            dataType: 'json',
                            cache: false,
                            data: { id: id },
                            success: function (data) {
                                if (!data) {
                                        $("#confirmationModalWithWorkOrders").modal("toggle");
                                        $("#confirmationModalWithWorkOrdersConfirmSave").on("click", function () {
                                            $("#confirmationModalWithWorkOrders").modal("toggle");
                                            $("#confirmationModalWithWorkOrdersConfirmSave").off("click");
                                    });
                                } else {
                                    deleteElement(id, "#confirmationModal", "#confirmationModalConfirmSave");
                                }
                            },
                        });

                    });
                function deleteElement(id, modalId, saveButtonId)
                {
                    $(modalId).modal("toggle");
                    $(saveButtonId).on("click",
                        function () {
                            $.ajax({
                                url: '@Url.Action("Delete", "Queue")',
                                type: 'DELETE',
                                dataType: 'json',
                                cache: false,
                                data: { id: id },
                                success: function () {
                                    $("#btnApplyFilter").trigger("click");
                                },
                            });
                            $(modalId).modal("toggle");
                        });
                }
                $("#confirmationModalConfirmCancel").on("click", function ()
                {
                    $("#confirmationModal").modal("toggle");
                    $("#confirmationModalConfirmSave").off("click");
                });
            });
        })(jQuery);
    </script>
}
