@using  Group.Salto.SOM.Web.Extensions;
@using Group.Salto.SOM.Web.Models.Result;
@using Group.Salto.SOM.Web.Models.Scheduler;
@using Group.Salto.Common.Constants;
@using Group.Salto.Common.Constants.CalendarEvent;

@model ResultViewModel<SchedulerViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var cultureInfo = Html.GetLanguageCookie().ToLower();
    var GlobalScriptLang = "/lib/dhtmlx/scheduler/codebase/sources/locale/locale_" + cultureInfo + ".js";
    var RecurringScriptLang = "/lib/dhtmlx/scheduler/codebase/sources/locale/recurring/locale_recurring_" + cultureInfo + ".js";
}

<h2>@Html.GetLocalizedText(CalendarEventConstants.CalendarEventSchedulerText)</h2>
<button class="btn btn-primary" type="button" onclick="location.href='@Url.Action("Index", "Calendar")'"><i class="fa fa-chevron-left"></i>&nbsp;&nbsp;@Html.GetLocalizedText(LocalizationsConstants.BackText)</button>
<partial name="_Scheduler" />

@section Styles{
    <link href="~/lib/dhtmlx/scheduler/codebase/dhtmlxscheduler_material.css" rel="stylesheet" />
    <link href="~/lib/dhtmlx/scheduler/codebase/dhtmlxscheduler_material__custom.css" rel="stylesheet" />
}

@section Scripts{
    <script src="~/js/Common/config.js"></script>
    <script src="~/js/Bundle/bundle--colorPicker.js"></script>
    <script src="~/js/Bundle/bundle--scheduler.js"></script>
    <script src="~/lib/dhtmlx/scheduler/codebase/ext/dhtmlxscheduler_container_autoresize.js"></script>
    <script src="~/js/Scheduler/Scheduler.js"></script>

    <script src="@GlobalScriptLang"></script>
    <script src="@RecurringScriptLang"></script>
    <script src="~/js/Common/contrastColor.js"></script>

    <script type="text/javascript">
        (function ($) {
            $(document).ready(function () {
                var options = {
                    id: '@Model.Data.Id',
                    url: app.config.Urls.calendarEvent,
                    eventUrl: app.config.Urls.saveCalendarEvents,
                    initCalendar: false,
                    eventCategory : @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model?.Data?.CalendarEventCategory)),
                    btnSelect: '@Html.GetLocalizedText(LocalizationsConstants.Select)',
                    btnCancel: '@Html.GetLocalizedText(LocalizationsConstants.CancelText)',
                    SequenceNoMove: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventSequenceNoMove)',
                    NameEmpty: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventNameEmpty)',
                    CostHourEmpty: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventCostHourEmpty)',
                    CostHourNotNumber: '@Html.GetLocalizedText(CalendarEventConstants.CalendarEventCostHourNotNumber)'
                };
                app.Scheduler.Init(options);
            });
        })(jQuery);
    </script>
}